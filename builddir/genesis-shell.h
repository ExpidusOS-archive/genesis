/* genesis-shell.h generated by valac 0.52.4, the Vala compiler, do not modify */

#ifndef __GENESIS_SHELL_H__
#define __GENESIS_SHELL_H__

#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>
#include <gio/gio.h>
#include <xcb/xcb.h>
#include <xcb/xproto.h>
#include <lua.h>
#include <xcb/randr.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS

#define GENESIS_TYPE_SHELL_BACKEND (genesis_shell_backend_get_type ())
#define GENESIS_SHELL_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GENESIS_TYPE_SHELL_BACKEND, GenesisShellBackend))
#define GENESIS_IS_SHELL_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GENESIS_TYPE_SHELL_BACKEND))
#define GENESIS_SHELL_BACKEND_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GENESIS_TYPE_SHELL_BACKEND, GenesisShellBackendIface))

typedef struct _GenesisShellBackend GenesisShellBackend;
typedef struct _GenesisShellBackendIface GenesisShellBackendIface;

#define GENESIS_TYPE_MONITOR_BACKEND (genesis_monitor_backend_get_type ())
#define GENESIS_MONITOR_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GENESIS_TYPE_MONITOR_BACKEND, GenesisMonitorBackend))
#define GENESIS_MONITOR_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GENESIS_TYPE_MONITOR_BACKEND, GenesisMonitorBackendClass))
#define GENESIS_IS_MONITOR_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GENESIS_TYPE_MONITOR_BACKEND))
#define GENESIS_IS_MONITOR_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GENESIS_TYPE_MONITOR_BACKEND))
#define GENESIS_MONITOR_BACKEND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GENESIS_TYPE_MONITOR_BACKEND, GenesisMonitorBackendClass))

typedef struct _GenesisMonitorBackend GenesisMonitorBackend;
typedef struct _GenesisMonitorBackendClass GenesisMonitorBackendClass;

#define GENESIS_X11_TYPE_BACKEND (genesis_x11_backend_get_type ())
#define GENESIS_X11_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GENESIS_X11_TYPE_BACKEND, GenesisX11Backend))
#define GENESIS_X11_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GENESIS_X11_TYPE_BACKEND, GenesisX11BackendClass))
#define GENESIS_X11_IS_BACKEND(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GENESIS_X11_TYPE_BACKEND))
#define GENESIS_X11_IS_BACKEND_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GENESIS_X11_TYPE_BACKEND))
#define GENESIS_X11_BACKEND_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GENESIS_X11_TYPE_BACKEND, GenesisX11BackendClass))

typedef struct _GenesisX11Backend GenesisX11Backend;
typedef struct _GenesisX11BackendClass GenesisX11BackendClass;
typedef struct _GenesisX11BackendPrivate GenesisX11BackendPrivate;

#define GENESIS_TYPE_SHELL (genesis_shell_get_type ())
#define GENESIS_SHELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GENESIS_TYPE_SHELL, GenesisShell))
#define GENESIS_SHELL_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GENESIS_TYPE_SHELL, GenesisShellClass))
#define GENESIS_IS_SHELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GENESIS_TYPE_SHELL))
#define GENESIS_IS_SHELL_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GENESIS_TYPE_SHELL))
#define GENESIS_SHELL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GENESIS_TYPE_SHELL, GenesisShellClass))

typedef struct _GenesisShell GenesisShell;
typedef struct _GenesisShellClass GenesisShellClass;
typedef struct __xcb_randr_screen_change_notify_event_t _xcb_randr_screen_change_notify_event_t;

#define GENESIS_TYPE_GENERIC_OBJECT (genesis_generic_object_get_type ())
#define GENESIS_GENERIC_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GENESIS_TYPE_GENERIC_OBJECT, GenesisGenericObject))
#define GENESIS_IS_GENERIC_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GENESIS_TYPE_GENERIC_OBJECT))
#define GENESIS_GENERIC_OBJECT_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GENESIS_TYPE_GENERIC_OBJECT, GenesisGenericObjectIface))

typedef struct _GenesisGenericObject GenesisGenericObject;
typedef struct _GenesisGenericObjectIface GenesisGenericObjectIface;
typedef struct _GenesisMonitorBackendPrivate GenesisMonitorBackendPrivate;

#define GENESIS_TYPE_RECTANGLE_UINT32 (genesis_rectangle_uint32_get_type ())
typedef struct _GenesisRectangleUint32 GenesisRectangleUint32;

#define GENESIS_TYPE_RECTANGLE_UINT16 (genesis_rectangle_uint16_get_type ())
typedef struct _GenesisRectangleUint16 GenesisRectangleUint16;

#define GENESIS_X11_TYPE_MONITOR (genesis_x11_monitor_get_type ())
#define GENESIS_X11_MONITOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GENESIS_X11_TYPE_MONITOR, GenesisX11Monitor))
#define GENESIS_X11_MONITOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GENESIS_X11_TYPE_MONITOR, GenesisX11MonitorClass))
#define GENESIS_X11_IS_MONITOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GENESIS_X11_TYPE_MONITOR))
#define GENESIS_X11_IS_MONITOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GENESIS_X11_TYPE_MONITOR))
#define GENESIS_X11_MONITOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GENESIS_X11_TYPE_MONITOR, GenesisX11MonitorClass))

typedef struct _GenesisX11Monitor GenesisX11Monitor;
typedef struct _GenesisX11MonitorClass GenesisX11MonitorClass;
typedef struct _GenesisX11MonitorPrivate GenesisX11MonitorPrivate;

#define GENESIS_TYPE_BASE_DESKTOP (genesis_base_desktop_get_type ())
#define GENESIS_BASE_DESKTOP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GENESIS_TYPE_BASE_DESKTOP, GenesisBaseDesktop))
#define GENESIS_IS_BASE_DESKTOP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GENESIS_TYPE_BASE_DESKTOP))
#define GENESIS_BASE_DESKTOP_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GENESIS_TYPE_BASE_DESKTOP, GenesisBaseDesktopIface))

typedef struct _GenesisBaseDesktop GenesisBaseDesktop;
typedef struct _GenesisBaseDesktopIface GenesisBaseDesktopIface;
typedef struct _GenesisShellPrivate GenesisShellPrivate;

struct _GenesisShellBackendIface {
	GTypeInterface parent_iface;
	GList* (*get_monitors) (GenesisShellBackend* self);
};

struct _GenesisX11Backend {
	GObject parent_instance;
	GenesisX11BackendPrivate * priv;
};

struct _GenesisX11BackendClass {
	GObjectClass parent_class;
};

typedef enum  {
	GENESIS_SHELL_ERROR_BACKEND
} GenesisShellError;
#define GENESIS_SHELL_ERROR genesis_shell_error_quark ()
struct __xcb_randr_screen_change_notify_event_t {
	guint8 response_type;
	guint8 rotation;
	guint16 sequence;
	xcb_timestamp_t timestamp;
	xcb_timestamp_t config_timestamp;
	xcb_window_t root;
	xcb_window_t request_window;
	guint16 size_id;
	guint16 subpixel_order;
	guint16 width;
	guint16 height;
	guint16 mwidth;
	guint16 mheight;
};

struct _GenesisGenericObjectIface {
	GTypeInterface parent_iface;
	gchar* (*to_string) (GenesisGenericObject* self);
	void (*to_lua) (GenesisGenericObject* self, lua_State* lvm);
};

struct _GenesisRectangleUint32 {
	guint32 x;
	guint32 y;
	guint32 width;
	guint32 height;
};

struct _GenesisRectangleUint16 {
	guint16 x;
	guint16 y;
	guint16 width;
	guint16 height;
};

struct _GenesisMonitorBackend {
	GObject parent_instance;
	GenesisMonitorBackendPrivate * priv;
};

struct _GenesisMonitorBackendClass {
	GObjectClass parent_class;
	gchar* (*to_string) (GenesisMonitorBackend* self);
	const gchar* (*get_name) (GenesisMonitorBackend* self);
	gboolean (*get_connected) (GenesisMonitorBackend* self);
	void (*get_physical_rect) (GenesisMonitorBackend* self, GenesisRectangleUint32 * result);
	void (*get_resolution) (GenesisMonitorBackend* self, GenesisRectangleUint16 * result);
};

struct _GenesisX11Monitor {
	GenesisMonitorBackend parent_instance;
	GenesisX11MonitorPrivate * priv;
};

struct _GenesisX11MonitorClass {
	GenesisMonitorBackendClass parent_class;
};

struct _GenesisBaseDesktopIface {
	GTypeInterface parent_iface;
};

struct _GenesisShell {
	GtkApplication parent_instance;
	GenesisShellPrivate * priv;
	gboolean arg_version;
	gchar* arg_backend;
};

struct _GenesisShellClass {
	GtkApplicationClass parent_class;
};

#define GENESIS_VERSION "0.1.0-prealpha"
#define GENESIS_DATADIR "/usr/share"
GType genesis_monitor_backend_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GenesisMonitorBackend, g_object_unref)
GType genesis_shell_backend_get_type (void) G_GNUC_CONST ;
GType genesis_x11_backend_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GenesisX11Backend, g_object_unref)
GType genesis_shell_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GenesisShell, g_object_unref)
guint genesis_shell_register_object (void* object,
                                     GDBusConnection* connection,
                                     const gchar* path,
                                     GError** error);
GQuark genesis_shell_error_quark (void);
GenesisX11Backend* genesis_x11_backend_new (GenesisShell* shell,
                                            GError** error);
GenesisX11Backend* genesis_x11_backend_construct (GType object_type,
                                                  GenesisShell* shell,
                                                  GError** error);
xcb_screen_t* genesis_x11_backend_get_default_screen (GenesisX11Backend* self);
xcb_atom_t* genesis_x11_backend_get_atom (GenesisX11Backend* self,
                                          const gchar* name);
xcb_connection_t* genesis_x11_backend_get_conn (GenesisX11Backend* self);
xcb_connection_t* genesis_x11_backend_get_randr (GenesisX11Backend* self);
void genesis_x11_xcb_randr_screen_change_notify_event_free (_xcb_randr_screen_change_notify_event_t * self);
G_DEFINE_AUTOPTR_CLEANUP_FUNC (_xcb_randr_screen_change_notify_event_t, genesis_x11_xcb_randr_screen_change_notify_event_free)
_xcb_randr_screen_change_notify_event_t* genesis_x11_xcb_randr_screen_change_notify_event_new (void);
GType genesis_generic_object_get_type (void) G_GNUC_CONST ;
GType genesis_rectangle_uint32_get_type (void) G_GNUC_CONST ;
GenesisRectangleUint32* genesis_rectangle_uint32_dup (const GenesisRectangleUint32* self);
void genesis_rectangle_uint32_free (GenesisRectangleUint32* self);
GType genesis_rectangle_uint16_get_type (void) G_GNUC_CONST ;
GenesisRectangleUint16* genesis_rectangle_uint16_dup (const GenesisRectangleUint16* self);
void genesis_rectangle_uint16_free (GenesisRectangleUint16* self);
GType genesis_x11_monitor_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GenesisX11Monitor, g_object_unref)
GenesisX11Monitor* genesis_x11_monitor_new (GenesisX11Backend* backend,
                                            xcb_randr_output_t output);
GenesisX11Monitor* genesis_x11_monitor_construct (GType object_type,
                                                  GenesisX11Backend* backend,
                                                  xcb_randr_output_t output);
void genesis_x11_monitor_update (GenesisX11Monitor* self);
gboolean genesis_x11_monitor_get_previous_state (GenesisX11Monitor* self);
gchar* genesis_generic_object_to_string (GenesisGenericObject* self);
void genesis_generic_object_to_lua (GenesisGenericObject* self,
                                    lua_State* lvm);
GList* genesis_shell_backend_get_monitors (GenesisShellBackend* self);
GType genesis_base_desktop_get_type (void) G_GNUC_CONST ;
gchar* genesis_monitor_backend_to_string (GenesisMonitorBackend* self);
GenesisMonitorBackend* genesis_monitor_backend_construct (GType object_type);
const gchar* genesis_monitor_backend_get_name (GenesisMonitorBackend* self);
gboolean genesis_monitor_backend_get_connected (GenesisMonitorBackend* self);
void genesis_monitor_backend_get_physical_rect (GenesisMonitorBackend* self,
                                                GenesisRectangleUint32 * result);
void genesis_monitor_backend_get_resolution (GenesisMonitorBackend* self,
                                             GenesisRectangleUint16 * result);
gdouble genesis_monitor_backend_get_diag_mm (GenesisMonitorBackend* self);
gdouble genesis_monitor_backend_get_diag_px (GenesisMonitorBackend* self);
gdouble genesis_monitor_backend_get_dpi (GenesisMonitorBackend* self);
GenesisShell* genesis_shell_new (void);
GenesisShell* genesis_shell_construct (GType object_type);
static gint genesis_main (gchar** args,
                   gint args_length1);

G_END_DECLS

#endif
