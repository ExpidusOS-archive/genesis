name: Nix

on:
  push:
    branches: ["master"]
    tags: ['v*.*.*']
  pull_request:
    branches: ["master"]

jobs:
  flake:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v12
        with:
          name: expidus
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community
          skipPush: "${{ github.event_name == 'pull_request' }}"
      - name: Build Flake
        run: nix build -L
      - name: Bundle Flake
        if: github.event_name != 'pull_request'
        run: nix bundle
  legacy:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v12
        with:
          name: expidus
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community
          skipPush: true
      - name: Build
        run: nix-build ./default.nix -A default.x86_64-linux
